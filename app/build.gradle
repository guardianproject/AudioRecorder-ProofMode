apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

//apply plugin: 'com.google.firebase.crashlytics'
//apply plugin: 'com.google.gms.google-services'

def versionMajor = 0
def versionMinor = 9
def versionPatch = 33

android {

	namespace 'com.dimowner.audiorecorder'
	compileSdkVersion 34
	//buildToolsVersion "30.0.3"
	defaultConfig {
		applicationId "com.dimowner.audiorecorder"
		minSdkVersion 24
		targetSdkVersion 34
//		versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
//		versionName "${versionMajor}.${versionMinor}.${versionPatch}"
		versionCode 933
		versionName "0.9.33"
	}

	buildFeatures {
		viewBinding true
	}

	def keystorePropertiesFile = rootProject.file("keystore.properties")
	def keystoreProperties = new Properties()
	keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

	def safetyNetKey = "\"foo\""

	if (project.hasProperty("safetynet_key"))
		safetyNetKey = project.ext.safetynet_key

	signingConfigs {

		dev {
			storeFile file('key/debug/debug.keystore')
			storePassword 'android'
			keyAlias 'androiddebugkey'
			keyPassword 'android'

		}
		release {
			storeFile file(keystoreProperties['prodStoreFile'])
			storePassword keystoreProperties['prodStorePassword']
			keyAlias keystoreProperties['prodKeyAlias']
			keyPassword keystoreProperties['prodKeyPassword']

		}
	}

	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			buildConfigField "String", "SAFETY_CHECK_KEY", safetyNetKey
			resValue 'string', "SAFETY_CHECK_KEY", safetyNetKey
//			firebaseCrashlytics {
//				mappingFileUploadEnabled true
//			}
		}
		debug {
			minifyEnabled false
			buildConfigField "String", "SAFETY_CHECK_KEY", safetyNetKey
			resValue 'string', "SAFETY_CHECK_KEY", safetyNetKey
		}
	}

	flavorDimensions "default"

	productFlavors {
		debugConfig {
			dimension "default"
			applicationId "com.dimowner.audiorecorder.debug"
			signingConfig = signingConfigs.dev
		}
		releaseConfig {
			dimension "default"
			signingConfig = signingConfigs.dev
			applicationId "com.dimowner.audiorecorder"
		}
	}

	compileOptions {
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}

	lintOptions {
		abortOnError false
	}
}

// Remove not needed buildVariants.
android.variantFilter { variant ->
	if (variant.buildType.name == 'release'
			&& variant.getFlavors().get(0).name == 'debugConfig') {
		variant.setIgnore(true)
	}
	if (variant.buildType.name == 'debug'
			&& variant.getFlavors().get(0).name == 'releaseConfig') {
		variant.setIgnore(true)
	}
}

dependencies {
	implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
	def androidX = "1.3.0"
	def coroutines = "1.4.1"
	def timber = "4.7.1"
	def preference_version = "1.2.0"

	//Kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
	implementation("androidx.preference:preference-ktx:$preference_version")

	//Timber
	implementation "com.jakewharton.timber:timber:$timber"
	implementation "androidx.recyclerview:recyclerview:$androidX"

	implementation "androidx.viewpager2:viewpager2:1.0.0"
	def work_version = '2.8.1'
	implementation "androidx.work:work-runtime-ktx:$work_version"

	implementation 'androidx.appcompat:appcompat:1.4.1'
	implementation 'com.google.android.material:material:1.6.0'
	implementation "com.google.guava:guava:31.0.1-android"
	implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'


	// To use CallbackToFutureAdapter
	implementation "androidx.concurrent:concurrent-futures:1.1.0"

	// Simple C2PA
	implementation("info.guardianproject:simple_c2pa:0.0.7")
	implementation("net.java.dev.jna:jna:5.13.0@aar")

	implementation 'org.bouncycastle:bcpkix-jdk15to18:1.72'
	implementation 'org.bouncycastle:bcprov-jdk15to18:1.72'
	api 'org.bouncycastle:bcpg-jdk15to18:1.71'


	//add the libProofMode library

	implementation 'org.proofmode:android-libproofmode:1.0.30'
	implementation 'org.proofmode:android-opentimestamps:1.0.27'
	// implementation project(":android-libproofmode")
	//implementation project(":android-opentimestamps")

	//add Google SafetyNet

	implementation 'com.google.android.gms:play-services-safetynet:18.0.1'
	implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

//add BouncyCastle crypto libs
	implementation 'org.bouncycastle:bcpkix-jdk15to18:1.72'
	implementation 'org.bouncycastle:bcprov-jdk15to18:1.72'
	implementation 'org.bouncycastle:bcpg-jdk15to18:1.71'

	implementation "androidx.work:work-runtime-ktx:$work_version"
	implementation("androidx.preference:preference-ktx:$preference_version")
	implementation 'androidx.core:core-ktx:1.9.0'
	implementation 'androidx.appcompat:appcompat:1.4.1'
	implementation 'com.google.android.material:material:1.6.0'


//	// Import the BoM for the Firebase platform
//	implementation platform('com.google.firebase:firebase-bom:26.1.0')
//	// Declare the dependencies for the Crashlytics and Analytics libraries
//	// When using the BoM, you don't specify versions in Firebase library dependencies
//	implementation 'com.google.firebase:firebase-crashlytics'
//	implementation 'com.google.firebase:firebase-analytics'
}
